if(!window.Form){window.Form={}}(function(){Form.Request=new Class({Binds:["onSubmit","onFormValidate"],Implements:[Options,Events,Class.Occlude],options:{requestOptions:{evalScripts:true,useSpinner:true,emulation:false,link:"ignore"},extraData:{},resetForm:true},property:"form.request",initialize:function(b,c,a){this.element=document.id(b);if(this.occlude()){return this.occluded}this.update=document.id(c);this.setOptions(a);this.makeRequest();if(this.options.resetForm){this.request.addEvent("success",function(){$try(function(){this.element.reset()}.bind(this));if(window.OverText){OverText.update()}}.bind(this))}this.attach()},toElement:function(){return this.element},makeRequest:function(){this.request=new Request.HTML($merge({url:this.element.get("action"),update:this.update,emulation:false,spinnerTarget:this.element,method:this.element.get("method")||"post"},this.options.requestOptions)).addEvents({success:function(b,a){["success","complete"].each(function(c){this.fireEvent(c,[this.update,b,a])},this)}.bind(this),failure:function(a){this.fireEvent("failure",a)}.bind(this),exception:function(){this.fireEvent("failure",xhr)}.bind(this)})},attach:function(a){a=$pick(a,true);method=a?"addEvent":"removeEvent";var b=this.element.retrieve("validator");if(b){b[method]("onFormValidate",this.onFormValidate)}if(!b||!a){this.element[method]("submit",this.onSubmit)}},detach:function(){this.attach(false)},enable:function(){this.attach()},disable:function(){this.detach()},onFormValidate:function(b,a,c){if(b||!fv.options.stopOnFailure){if(c&&c.stop){c.stop()}this.send()}},onSubmit:function(a){if(this.element.retrieve("validator")){this.detach();this.addFormEvent();return}a.stop();this.send()},send:function(){var b=this.element.toQueryString().trim();var a=$H(this.options.extraData).toQueryString();if(b){b+="&"+a}else{b=a}this.fireEvent("send",[this.element,b]);this.request.send({data:b});return this}});Element.Properties.formRequest={set:function(){var a=Array.link(arguments,{options:Object.type,update:Element.type,updateId:String.type});var c=a.update||a.updateId;var b=this.retrieve("form.request");if(c){if(b){b.update=document.id(c)}this.store("form.request:update",c)}if(a.options){if(b){b.setOptions(a.options)}this.store("form.request:options",a.options)}return this},get:function(){var a=Array.link(arguments,{options:Object.type,update:Element.type,updateId:String.type});var b=a.update||a.updateId;if(a.options||b||!this.retrieve("form.request")){if(a.options||!this.retrieve("form.request:options")){this.set("form.request",a.options)}if(b){this.set("form.request",b)}this.store("form.request",new Form.Request(this,this.retrieve("form.request:update"),this.retrieve("form.request:options")))}return this.retrieve("form.request")}};Element.implement({formUpdate:function(b,a){this.get("form.request",b,a).send();return this}})})();